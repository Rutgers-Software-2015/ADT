Performing Unit Test: updateTableUnoccupiedByCustomer

Connecting to database... 
Meeting preconditions (assign customers to tables)
Success!

Beginning to unaassign customers from table... 

Initial Table Conditions: 

Table 1: Occupied

Table 2: Occupied

Table 3: Occupied

Table 4: Occupied

Table 5: Occupied

Table 6: Occupied

Table 7: Occupied

Table 8: Occupied

Table 9: Occupied

Table 10: Occupied

EXPECTED OUTCOME:

Table 1: Unoccupied

Table 2: Unoccupied

Table 3: Unoccupied

Table 4: Unoccupied

Table 5: Unoccupied

Table 6: Unoccupied

Table 7: Unoccupied

Table 8: Unoccupied

Table 9: Unoccupied

Table 10: Unoccupied

Changing Table 1 customer status: 

The database has been updated with the change to Table 1!
Checking if change to database has been made successfully...
SUBTEST 1  = PASS
The changes to the database have been made successfully! Table 1 customer status has been set to unoccupied!


Changing Table 2 customer status: 

The database has been updated with the change to Table 2!
Checking if change to database has been made successfully...
SUBTEST 2  = PASS
The changes to the database have been made successfully! Table 2 customer status has been set to unoccupied!


Changing Table 3 customer status: 

The database has been updated with the change to Table 3!
Checking if change to database has been made successfully...
SUBTEST 3  = PASS
The changes to the database have been made successfully! Table 3 customer status has been set to unoccupied!


Changing Table 4 customer status: 

The database has been updated with the change to Table 4!
Checking if change to database has been made successfully...
SUBTEST 4  = PASS
The changes to the database have been made successfully! Table 4 customer status has been set to unoccupied!


Changing Table 5 customer status: 

The database has been updated with the change to Table 5!
Checking if change to database has been made successfully...
SUBTEST 5  = PASS
The changes to the database have been made successfully! Table 5 customer status has been set to unoccupied!


Changing Table 6 customer status: 

The database has been updated with the change to Table 6!
Checking if change to database has been made successfully...
SUBTEST 6  = PASS
The changes to the database have been made successfully! Table 6 customer status has been set to unoccupied!


Changing Table 7 customer status: 

The database has been updated with the change to Table 7!
Checking if change to database has been made successfully...
SUBTEST 7  = PASS
The changes to the database have been made successfully! Table 7 customer status has been set to unoccupied!


Changing Table 8 customer status: 

The database has been updated with the change to Table 8!
Checking if change to database has been made successfully...
SUBTEST 8  = PASS
The changes to the database have been made successfully! Table 8 customer status has been set to unoccupied!


Changing Table 9 customer status: 

The database has been updated with the change to Table 9!
Checking if change to database has been made successfully...
SUBTEST 9  = PASS
The changes to the database have been made successfully! Table 9 customer status has been set to unoccupied!


Changing Table 10 customer status: 

The database has been updated with the change to Table 10!
Checking if change to database has been made successfully...
SUBTEST 10  = PASS
The changes to the database have been made successfully! Table 10 customer status has been set to unoccupied!

FINAL RESULT: Table customer statuses after change has been made: 


Table 1: Unoccupied


Table 2: Unoccupied


Table 3: Unoccupied


Table 4: Unoccupied


Table 5: Unoccupied


Table 6: Unoccupied


Table 7: Unoccupied


Table 8: Unoccupied


Table 9: Unoccupied


Table 10: Unoccupied

Comparing results of test against expected outcome.... 

EXPECTED RESULT MATCHES FINAL RESULT

TEST = PASS
